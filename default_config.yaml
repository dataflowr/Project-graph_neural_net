---
name: qap_simpler #qap_simpler qap_mp
cpu: No
root_dir: 'experiments-gnn'
problem: 'qap' #qap, tsp, hhc, tsprl, mcp, sbm
test_enabled: Yes
use_dgl: Yes
#path_dataset: data # Path where datasets are stored, default data/

data:
    train: # Train/Val data generation parameters
        num_examples_train: 1000
        num_examples_val: 1000
        n_vertices: 100
        sparsify: None #Only works for not fgnns. Put to None if you don't want sparsifying
        generative_model: ErdosRenyi # so far ErdosRenyi, Regular or BarabasiAlbert
        noise_model: ErdosRenyi
        edge_density: 0.05
        vertex_proba: 1. # Parameter of the binomial distribution of vertices
        noise: 0.2
            
    test: #Test data generation parameters
        num_examples_test: 1000
        n_vertices: 100
        sparsify: None #Only works for not fgnns. Put to None if you don't want sparsifying
        #custom: No #If No, keeps the data_generation from train, just a failsafe so people consciously have to activate custom test
        generative_model: ErdosRenyi # so far ErdosRenyi, Regular or BarabasiAlbert
        noise_model: ErdosRenyi
        edge_density: 0.05
        vertex_proba: 1. # Parameter of the binomial distribution of vertices
        noise: 0.2


train: # Training parameters
    epoch: 1
    batch_size: 10 #10
    lr: !!float 1e-3 #5e-6
    scheduler_step: 2
    scheduler_decay: 0.5
    lr_stop: !!float 1e-7
    print_freq: 100
    anew: Yes
    start_model: '.'

arch: # Architecture and model
    arch_gnn: gatedgcn #fgnn, gcn, gatedgcn
    arch_load: siamese #siamese or simple
    embedding: node #node or edge
    num_blocks: 4
    original_features_num: 1
    dim_features: 96
    depth_of_mlp: 3
    input_embed: Yes

observers:
    neptune:
        enable: No
        project: mlelarge/GNN
